// This file is auto generated by script
// Date: 19/12/2021 01:14:14

#include <string>
#include <array>

#include "rapidjson/document.h"
#include "rapidjson/writer.h"
#include "rapidjson/stringbuffer.h"

namespace json_autogenerated_classes {

struct Projectile {
  std::string type;
  std::array<float, 2> velocity;
  float damage;
  float lifetime;
};

struct Bow {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  Projectile projectile;
};

struct Weapons {
  Bow bow;
};

struct Archer {
  int health;
  std::string dragonbones;
  Weapons weapons;
};

struct Dash {
  std::string description;
  float cooldown;
  std::array<float, 2> velocity;
};

struct FirebookProjectile {
  std::string type;
  std::array<float, 2> velocity;
  float damage;
  float lifetime;
};

struct Firebook {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  FirebookProjectile projectile;
};

struct Firecloud {
  std::string description;
  float range;
  float cooldown;
  std::array<float, 2> impulse;
};

struct ChainSweepProjectile {
  std::string type;
  float damage;
  float lifetime;
};

struct ChainSweep {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  ChainSweepProjectile projectile;
};

struct ChainSwingProjectile {
  std::string type;
  float damage;
  float lifetime;
};

struct ChainSwing {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  ChainSwingProjectile projectile;
};

struct BanditBossWeapons {
  Dash dash;
  Firebook firebook;
  Firecloud firecloud;
  ChainSweep chainSweep;
  ChainSwing chainSwing;
};

struct BanditBoss {
  int health;
  std::string dragonbones;
  float jumpHeight;
  float defaultSpeed;
  float enhancedSpeed;
  BanditBossWeapons weapons;
};

struct LegsProjectile {
  std::string type;
  std::array<float, 2> impulse;
  std::array<float, 2> angular;
  float damage;
  float lifetime;
};

struct Legs {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  LegsProjectile projectile;
};

struct BoulderPusherWeapons {
  Legs legs;
};

struct BoulderPusher {
  int health;
  std::string dragonbones;
  BoulderPusherWeapons weapons;
};

struct CannonProjectile {
  std::string type;
  std::array<float, 2> velocity;
  float damage;
  float lifetime;
};

struct Cannon {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  CannonProjectile projectile;
};

struct CannonWeapons {
  Cannon cannon;
};

struct UnitsCannon {
  int health;
  std::string dragonbones;
  CannonWeapons weapons;
};

struct FireballProjectile {
  std::string type;
  std::array<float, 2> velocity;
  float damage;
  float lifetime;
};

struct Fireball {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  FireballProjectile projectile;
};

struct FirecloudWeapons {
  Fireball fireball;
};

struct UnitsFirecloud {
  int health;
  std::string dragonbones;
  float shellRefillCooldown;
  int shellRefillCount;
  float lifetime;
  float maxSpeed;
  FirecloudWeapons weapons;
};

struct Sword {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  float damage;
};

struct SpellProjectile {
  std::string type;
  std::array<float, 2> velocity;
  float damage;
  float lifetime;
};

struct Spell {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  SpellProjectile projectile;
};

struct SpecialProjectile {
  std::string type;
  std::array<float, 2> velocity;
  float damage;
  float lifetime;
};

struct Special {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  SpecialProjectile projectile;
};

struct WeaponsDash {
  std::string description;
  float cooldown;
  std::array<float, 2> velocity;
};

struct PlayerWeapons {
  Sword sword;
  Spell spell;
  Special special;
  WeaponsDash dash;
};

struct Player {
  int health;
  std::string dragonbones;
  float maxSpeed;
  PlayerWeapons weapons;
};

struct WeaponsSpellProjectile {
  std::string type;
  std::array<float, 2> velocity;
  float damage;
  float lifetime;
};

struct WeaponsSpell {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  WeaponsSpellProjectile projectile;
};

struct SlimeWeapons {
  WeaponsSpell spell;
};

struct Slime {
  int health;
  std::string dragonbones;
  float maxSpeed;
  SlimeWeapons weapons;
};

struct Spear {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  float damage;
};

struct SpearmanWeapons {
  Spear spear;
};

struct Spearman {
  int health;
  std::string dragonbones;
  float maxSpeed;
  SpearmanWeapons weapons;
};

struct Spider {
  int health;
  std::string dragonbones;
  float linewidth;
  float idleSpeed;
  float alertSpeed;
};

struct Stalactite {
  std::string description;
  std::string type;
  float cooldown;
  float damage;
  std::array<float, 2> velocity;
};

struct StalactiteWeapons {
  Stalactite stalactite;
};

struct UnitsStalactite {
  int health;
  std::string dragonbones;
  StalactiteWeapons weapons;
};

struct Axe {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  float damage;
};

struct AxWarriorWeapons {
  Axe axe;
};

struct AxWarrior {
  int health;
  std::string dragonbones;
  float maxSpeed;
  AxWarriorWeapons weapons;
};

struct Sting {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  float damage;
};

struct WaspWeapons {
  Sting sting;
};

struct Wasp {
  int health;
  std::string dragonbones;
  float idleSpeed;
  float alertSpeed;
  WaspWeapons weapons;
};

struct Maw {
  std::string description;
  std::string type;
  float range;
  float cooldown;
  float damage;
};

struct WolfWeapons {
  Maw maw;
};

struct Wolf {
  int health;
  std::string dragonbones;
  float idleSpeed;
  float alertSpeed;
  WolfWeapons weapons;
};

struct Units {
  Archer archer;
  BanditBoss banditBoss;
  BoulderPusher boulderPusher;
  UnitsCannon cannon;
  UnitsFirecloud firecloud;
  Player player;
  Slime slime;
  Spearman spearman;
  Spider spider;
  UnitsStalactite stalactite;
  AxWarrior axWarrior;
  Wasp wasp;
  Wolf wolf;
};

} // namespace json_autogenerated_classes
